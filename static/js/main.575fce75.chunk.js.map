{"version":3,"sources":["components/Autocomplete/Autocomplete.tsx","data/people.ts","App.tsx","index.tsx"],"names":["Autocomplete","people","query","onSelected","applyQuery","setQuery","setAppliedQuery","className","role","map","person","classNames","sex","onClick","name","selectPersonHandler","slug","peopleFromServer","born","died","fatherName","motherName","App","delay","useState","selectedPerson","setSelectedPerson","appliedQuery","useCallback","callback","timerId","args","window","clearTimeout","setInterval","debonce","useMemo","normalizedQuery","trim","toLowerCase","filter","includes","type","placeholder","value","onChange","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"yPAeaA,EAAgC,SAAC,GAOvC,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,MACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBASA,OACE,qBAAKC,UAAU,gBAAgBC,KAAK,OAApC,SACE,qBAAKD,UAAU,mBAAf,SACGL,GAASD,EAAOQ,KAAI,SAAAC,GAAM,OACzB,qBAAKH,UAAU,uBAAf,SACE,mBACEA,UAAWI,IAAW,CACpB,gBAAgC,MAAfD,EAAOE,IACxB,kBAAkC,MAAfF,EAAOE,MAE5BC,QAAS,kBAjBO,SAACH,GAC3BP,EAAWO,GACXL,EAASK,EAAOI,MAChBV,EAAW,IACXE,EAAgB,GACjB,CAY0BS,CAAoBL,EAA1B,EALX,SAOGA,EAAOI,QAR+BJ,EAAOM,KADzB,OAgBlC,EC/CYC,EAA6B,CACxC,CACEH,KAAM,oBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZL,KAAM,0BAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZL,KAAM,yBAER,CACEF,KAAM,iBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZL,KAAM,uBAER,CACEF,KAAM,kBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZL,KAAM,wBAER,CACEF,KAAM,sBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,4BAER,CACEF,KAAM,wBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZL,KAAM,8BAER,CACEF,KAAM,wBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZL,KAAM,8BAER,CACEF,KAAM,kBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZL,KAAM,wBAER,CACEF,KAAM,kBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZL,KAAM,wBAER,CACEF,KAAM,wBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZL,KAAM,8BAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZL,KAAM,yBAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACEF,KAAM,2BACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZL,KAAM,iCAER,CACEF,KAAM,uBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZL,KAAM,6BAER,CACEF,KAAM,wBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZL,KAAM,8BAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACEF,KAAM,0BACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZL,KAAM,gCAER,CACEF,KAAM,oBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZL,KAAM,0BAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,yBAER,CACEF,KAAM,sBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACEF,KAAM,gBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZL,KAAM,sBAER,CACEF,KAAM,2BACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZL,KAAM,iCAER,CACEF,KAAM,iBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZL,KAAM,uBAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZL,KAAM,yBAER,CACEF,KAAM,iBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,uBAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACEF,KAAM,kBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,wBAER,CACEF,KAAM,yBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,+BAER,CACEF,KAAM,kBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,wBAER,CACEF,KAAM,uBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,6BAER,CACEF,KAAM,iBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZL,KAAM,uBAER,CACEF,KAAM,sBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACEF,KAAM,kBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZL,KAAM,wBAER,CACEF,KAAM,mBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZL,KAAM,yBAER,CACEF,KAAM,gBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,sBAER,CACEF,KAAM,iBACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZL,KAAM,uBAER,CACEF,KAAM,cACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZL,KAAM,oBAER,CACEF,KAAM,gCACNF,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZL,KAAM,uCCxUH,IAAMM,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,EAA4CC,mBAAwB,MAApE,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcG,EAAd,KACA,EAAwCmB,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBrB,EAArB,KACA,EAA6BmB,GAAkB,CAAC,EAAxCX,EAAR,EAAQA,KAAMI,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAEdf,EAAawB,sBAtBrB,SAAiBC,EAAoBN,GACnC,IAAIO,EAAU,EAEd,OAAO,WAAmB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBACvBC,OAAOC,aAAaH,GAEpBA,EAAUE,OAAOE,aAAY,WAC3BL,EAAQ,WAAR,EAAYE,EACb,GAAER,EACJ,CACF,CAYgCY,CAAQ7B,EAAiBiB,GAAQ,IAO1DtB,EAASmC,mBAAQ,WACrB,IAAMC,EAAkBV,EAAaW,OAAOC,cAE5C,OAAOtB,EACJuB,QAAO,SAAA9B,GAAM,OAAIA,EAAOI,KAAKyB,cAAcE,SAASJ,EAAvC,GACjB,GAAE,CAACpB,EAAkBU,IAEtB,OACE,uBAAMpB,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGkB,EAAc,UACVX,EADU,aACDI,EADC,cACSC,EADT,KAGb,uBAIJ,sBAAKZ,UAAWI,IAAW,WAAY,CACrC,cAAegB,IADjB,UAIE,qBAAKpB,UAAU,mBAAf,SACE,uBACEmC,KAAK,OACLC,YAAY,2BACZpC,UAAU,QACVqC,MAAO1C,EACP2C,SAhCgB,SAACC,GACzBzC,EAASyC,EAAMC,OAAOH,OACtBxC,EAAW0C,EAAMC,OAAOH,MACzB,MAiCMjB,IAAiB1B,EAAO+C,OACvB,qBAAKzC,UAAU,gBAAf,qCAIA,cAAC,EAAD,CACEN,OAAQA,EACRC,MAAOyB,EACPxB,WAAY,SAACO,GAAD,OAAYgB,EAAkBhB,EAA9B,EACZL,SAAUA,EACVD,WAAYA,EACZE,gBAAiBA,SAM5B,ECjFD2C,IAASC,OAAO,cAAC,EAAD,CAAK3B,MAAO,MAAU4B,SAASC,eAAe,Q","file":"static/js/main.575fce75.chunk.js","sourcesContent":["/* eslint-disable */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types/Person';\nimport './Autocomplete.scss';\n\ntype Props = {\n  people: Person[],\n  query: string,\n  onSelected: (person: Person) => void,\n  applyQuery: (query: string) => void,\n  setQuery: (query: string) => void,\n  setAppliedQuery: (query: string) => void,\n};\n\nexport const Autocomplete: React.FC<Props> = ({ \n  people, \n  query, \n  onSelected,\n  applyQuery,\n  setQuery,\n  setAppliedQuery\n}) => {\n  const selectPersonHandler = (person: Person) => {\n    onSelected(person);\n    setQuery(person.name);\n    applyQuery('');\n    setAppliedQuery('')\n  }\n\n  return (\n    <div className=\"dropdown-menu\" role=\"menu\">\n      <div className=\"dropdown-content\">\n        {query && people.map(person => (\n          <div className=\"dropdown-item person\" key={person.slug}>\n            <p\n              className={classNames({\n                'has-text-link': person.sex === 'm',\n                'has-text-danger': person.sex === 'f',\n              })}\n              onClick={() => selectPersonHandler(person)}\n            >\n              {person.name}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import classNames from 'classnames';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport './App.scss';\nimport { Autocomplete } from './components/Autocomplete/Autocomplete';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\n\n/* eslint-disable-next-line */\nfunction debonce(callback: Function, delay: number) {\n  let timerId = 0;\n\n  return (...args: any) => {\n    window.clearTimeout(timerId);\n\n    timerId = window.setInterval(() => {\n      callback(...args);\n    }, delay);\n  };\n}\n\ntype Props = {\n  delay: number;\n};\n\nexport const App: React.FC<Props> = ({ delay }) => {\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const { name, born, died } = selectedPerson || {};\n\n  const applyQuery = useCallback(debonce(setAppliedQuery, delay), []);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const people = useMemo((): Person[] => {\n    const normalizedQuery = appliedQuery.trim().toLowerCase();\n\n    return peopleFromServer\n      .filter(person => person.name.toLowerCase().includes(normalizedQuery));\n  }, [peopleFromServer, appliedQuery]);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson ? (\n          `${name} (${born} - ${died})`\n        ) : (\n          'No selected person'\n        )}\n      </h1>\n\n      <div className={classNames('dropdown', {\n        'is-active': !!appliedQuery,\n      })}\n      >\n        <div className=\"dropdown-trigger\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n        </div>\n\n        {appliedQuery && !people.length ? (\n          <div className=\"dropdown-menu\">\n            No matching suggestions\n          </div>\n        ) : (\n          <Autocomplete\n            people={people}\n            query={appliedQuery}\n            onSelected={(person) => setSelectedPerson(person)}\n            setQuery={setQuery}\n            applyQuery={applyQuery}\n            setAppliedQuery={setAppliedQuery}\n          />\n        )}\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App delay={1000} />, document.getElementById('root'));\n"],"sourceRoot":""}