{"version":3,"sources":["components/Autocomplete/Autocomplete.tsx","data/people.ts","App.tsx","index.tsx"],"names":["Autocomplete","people","delay","onSelected","useState","query","setQuery","filteredPeople","setFilteredPeople","isDropdownActive","setDropdownActive","useEffect","timeoutId","setTimeout","normalizedQuery","trim","toLowerCase","filtered","filter","person","name","includes","clearTimeout","className","classNames","type","placeholder","value","onChange","event","newQuery","target","length","map","sex","onClick","handleSelectPerson","slug","peopleFromServer","born","died","fatherName","motherName","App","selectedPerson","setSelectedPerson","ReactDOM","render","document","getElementById"],"mappings":"iMAuFeA,EA7EuB,SAAC,GAIhC,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,WAEA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4CF,mBAAmB,IAA/D,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,WACR,IAAMC,EAAYC,YAAW,WAC3B,IAAMC,EAAkBT,EAAMU,OAAOC,cAC/BC,EAAWhB,EACdiB,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKJ,cAAcK,SAASP,EAAvC,IAEhBN,EAAkBS,EACnB,GAAEf,GAEH,OAAO,kBAAMoB,aAAaV,EAAnB,CACR,GAAE,CAACP,EAAOJ,EAAQC,IAoBnB,OACE,sBAAKqB,UAAWC,IAAW,WAAY,CAAE,YAAaf,IAAtD,UACE,qBAAKc,UAAU,mBAAf,SACE,uBACEE,KAAK,OACLC,YAAY,2BACZH,UAAU,QACVI,MAAOtB,EACPuB,SA1BkB,SAACC,GACzB,IAAMC,EAAWD,EAAME,OAAOJ,MAE9BrB,EAASwB,GAELA,EAASE,OAAS,EACpBtB,GAAkB,GAElBA,GAAkB,EAErB,MAmBID,GACC,qBAAKc,UAAU,gBAAf,SACE,qBAAKA,UAAU,mBAAf,SAC6B,IAA1BhB,EAAeyB,OACd,qBAAKT,UAAU,gBAAf,qCAEAhB,EAAe0B,KAAI,SAAAd,GAAM,OAEvB,aADA,CACA,OAEEI,UAAWC,IAAW,gBAAiB,SAAU,CAC/C,gBAAgC,MAAfL,EAAOe,IACxB,kBAAkC,MAAff,EAAOe,MAE5BC,QAAS,kBA/BE,SAAChB,GAC1BhB,EAAWgB,GACXb,EAASa,EAAOC,MAChBV,GAAkB,EACnB,CA2B8B0B,CAAmBjB,EAAzB,EANX,SAQGA,EAAOC,MAPHD,EAAOkB,KAHS,UAmBtC,ECnFYC,EAA6B,CACxC,CACElB,KAAM,oBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZL,KAAM,0BAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZL,KAAM,yBAER,CACEjB,KAAM,iBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZL,KAAM,uBAER,CACEjB,KAAM,kBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZL,KAAM,wBAER,CACEjB,KAAM,sBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,4BAER,CACEjB,KAAM,wBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZL,KAAM,8BAER,CACEjB,KAAM,wBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZL,KAAM,8BAER,CACEjB,KAAM,kBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZL,KAAM,wBAER,CACEjB,KAAM,kBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZL,KAAM,wBAER,CACEjB,KAAM,wBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZL,KAAM,8BAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZL,KAAM,yBAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACEjB,KAAM,2BACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZL,KAAM,iCAER,CACEjB,KAAM,uBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZL,KAAM,6BAER,CACEjB,KAAM,wBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZL,KAAM,8BAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACEjB,KAAM,0BACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZL,KAAM,gCAER,CACEjB,KAAM,oBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZL,KAAM,0BAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,yBAER,CACEjB,KAAM,sBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACEjB,KAAM,gBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZL,KAAM,sBAER,CACEjB,KAAM,2BACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZL,KAAM,iCAER,CACEjB,KAAM,iBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZL,KAAM,uBAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZL,KAAM,yBAER,CACEjB,KAAM,iBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,uBAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACEjB,KAAM,kBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,wBAER,CACEjB,KAAM,yBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,+BAER,CACEjB,KAAM,kBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,wBAER,CACEjB,KAAM,uBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,6BAER,CACEjB,KAAM,iBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZL,KAAM,uBAER,CACEjB,KAAM,sBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACEjB,KAAM,kBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZL,KAAM,wBAER,CACEjB,KAAM,mBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZL,KAAM,yBAER,CACEjB,KAAM,gBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,sBAER,CACEjB,KAAM,iBACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZL,KAAM,uBAER,CACEjB,KAAM,cACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZL,KAAM,oBAER,CACEjB,KAAM,gCACNc,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZL,KAAM,uCChUKM,EAvBc,SAAC,GAAe,IAAbzC,EAAY,EAAZA,MAC9B,EAA4CE,mBAAwB,MAApE,mBAAOwC,EAAP,KAAuBC,EAAvB,KACA,EAA6BD,GAAkB,CAAC,EAAxCxB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAMpB,OACE,uBAAMjB,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGqB,EAAc,UAAMxB,EAAN,aAAemB,EAAf,cAAyBC,EAAzB,KAAmC,uBAGpD,cAAC,EAAD,CACEvC,OAAQqC,EACRpC,MAAOA,EACPC,WAbuB,SAACgB,GAC5B0B,EAAkB1B,EACnB,MAeF,EC1BD2B,IAASC,OAAO,cAAC,EAAD,CAAK7C,MAAO,MAAU8C,SAASC,eAAe,Q","file":"static/js/main.165f7727.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[];\n  delay: number;\n  onSelected: (person: Person) => void;\n};\n\nconst Autocomplete: React.FC<Props> = ({\n  people,\n  delay,\n  onSelected,\n}) => {\n  const [query, setQuery] = useState('');\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n  const [isDropdownActive, setDropdownActive] = useState(false);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      const normalizedQuery = query.trim().toLowerCase();\n      const filtered = people\n        .filter(person => person.name.toLowerCase().includes(normalizedQuery));\n\n      setFilteredPeople(filtered);\n    }, delay);\n\n    return () => clearTimeout(timeoutId);\n  }, [query, people, delay]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    setQuery(newQuery);\n\n    if (newQuery.length > 0) {\n      setDropdownActive(true);\n    } else {\n      setDropdownActive(false);\n    }\n  };\n\n  const handleSelectPerson = (person: Person) => {\n    onSelected(person);\n    setQuery(person.name);\n    setDropdownActive(false);\n  };\n\n  return (\n    <div className={classNames('dropdown', { 'is-active': isDropdownActive })}>\n      <div className=\"dropdown-trigger\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a part of the name\"\n          className=\"input\"\n          value={query}\n          onChange={handleInputChange}\n        />\n      </div>\n      {isDropdownActive && (\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {filteredPeople.length === 0 ? (\n              <div className=\"dropdown-item\">No matching suggestions</div>\n            ) : (\n              filteredPeople.map(person => (\n                /* eslint-disable-next-line */\n                <div\n                  key={person.slug}\n                  className={classNames('dropdown-item', 'person', {\n                    'has-text-link': person.sex === 'm',\n                    'has-text-danger': person.sex === 'f',\n                  })}\n                  onClick={() => handleSelectPerson(person)}\n                >\n                  {person.name}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useState } from 'react';\nimport Autocomplete from './components/Autocomplete/Autocomplete';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\n\ntype Props = {\n  delay: number;\n};\n\nconst App: React.FC<Props> = ({ delay }) => {\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const { name, born, died } = selectedPerson || {};\n\n  const handleSelectedPerson = (person: Person) => {\n    setSelectedPerson(person);\n  };\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson ? `${name} (${born} - ${died})` : 'No selected person'}\n      </h1>\n\n      <Autocomplete\n        people={peopleFromServer}\n        delay={delay}\n        onSelected={handleSelectedPerson}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(<App delay={1000} />, document.getElementById('root'));\n"],"sourceRoot":""}